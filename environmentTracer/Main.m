
addpath('./ParallelScript');
addpath('../Utils');
addpath('../tracer/Scene');
addpath('../tracer/Objects');

renderdImageSize       = 64;
renderdImagePath       ='./';

% -- samples should always be in square -- %
totalPerPixelSamples   = 1;

totalCpuCore         = 2;
renderBlockSize      = 1;
IsStartParpool       = false;


% -- IsVisualise  = true, displays the meshs -- %
IsVisualise     = false;
% -- Load the mesh generated by photometic stero-- % 
[InternalnewPhotometricSurfaceData] = convertAndCreateListOfNewPhotometricSurface(IsVisualise);

environmentRayTracer = ParallelRayTracer ( totalCpuCore, renderBlockSize, totalPerPixelSamples);

% -- meshIndex 1-2, 1 = cat and 2 = face with coverd hair -- %
for meshIndex = 1:3
    
    % -- lightIndex 1-4 generates 4 scene with different light position -- %
    for lightIndex = 1:1
        
        fprintf('Internal Data Name: %s \n',InternalnewPhotometricSurfaceData{meshIndex,1}.name);
        scene  = createCornallBoxAndAddMesh ( lightIndex, renderdImageSize,...
                                              InternalnewPhotometricSurfaceData{meshIndex,1}.mesh );
        
        % -- Add the Scene -- %
        environmentRayTracer.setRenderImageAttribute( strcat( InternalnewPhotometricSurfaceData{meshIndex,1}.name,num2str(lightIndex) ), ...
                                                      renderdImagePath, renderdImageSize)
        environmentRayTracer.appendScene( scene );
        
    end
    
end


% -- Init the tracer -- %
environmentRayTracer.init();
environmentRayTracer.startParpool(IsStartParpool);

% -- Ray 1 - 3 
for rayReflectionIndex = 1:3
    environmentRayTracer.startTracer( rayReflectionIndex ) ;
end


